{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "ChordPro",
  "patterns": [
    {
      "include": "#directive"
    },
    {
      "include": "#meta-substitution"
    },
    {
      "include": "#annotation"
    },
    {
      "include": "#chord"
    },
    {
      "include": "#pango-markup"
    },
    {
      "include": "#abc-parameter1"
    },
    {
      "include": "#abc-parameter"
    },
    {
      "include": "#comment-line"
    }
  ],
  "repository": {
    "chord": {
      "match": "(\\[)([\\w\\#\\/\\^]+)(\\])",
      "name": "constant.language.chord.chordpro",
      "captures": {
        "1": {
          "name": "punctuation.definition.chord.begin.chordpro"
        },
        "2": {
          "name": "constant.language.chord.name.chordpro"
        },
        "3": {
          "name": "punctuation.definition.chord.end.chordpro"
        }
      }
    },
    "annotation": {
      "match": "(\\[\\*)([ _\\-!\\*\\w\\#\\/\\^]+)(\\])",
      "name": "text.annotation.chordpro",
      "captures": {
        "1": {
          "name": "punctuation.definition.annotation.begin.chordpro"
        },
        "2": {
          "name": "text.annotation.value.chordpro"
        },
        "3": {
          "name": "punctuation.definition.annotation.end.chordpro"
        }
      }
    },
    "comment-line": {
      "patterns": [
        {
          "match": "#.*",
          "name": "comment.line.number-sign.chordpro"
        }
      ]
    },
    "meta-substitution": {
      "match": "(\\%{)(\\w[\\w\\d_\\-\\.]+)\\s*((\\|)\\s*([^\\}\\|]+)(\\s*(\\|)\\s*([^\\}]+))?)?(\\})",
      "name": "meta.structure.meta-substitution.chordpro",
      "captures": {
        "1": {
          "name": "punctuation.definition.meta-substitution.begin.chordpro"
        },
        "2": {
          "comment": "metadata directive name",
          "name": "entity.name.tag.directive.chordpro"
        },
        "4": {
          "name": "punctuation.definition.separator.meta-substitution.chordpro"
        },
        "5": {
            "comment": "true-text",
            "name": "variable.other.true.chordpro",
            "include": "$self"
        },
        "7": {
          "name": "punctuation.definition.separator.meta-substitution.chordpro"
        },
        "8": {
            "comment": "false-text",
            "name": "variable.other.false.chordpro",
            "include": "$self"
        },
        "9": {
          "name": "punctuation.definition.meta-substitution.end.chordpro"
        }
      }
    },
    "directive": {
      "match": "({)(\\w[\\w\\d_\\-]*(:?)\\s*(%{\\w[\\w\\d_\\-\\.]*}|[^}]*)*?)(})",
      "name": "meta.structure.directive.chordpro",
      "captures": {
        "1": {
          "name": "punctuation.definition.directive.begin.chordpro"
        },
        "2": {
          "patterns": [
            {
              "include": "#comment-directive-content"
            },
            {
              "include": "#legacy-directive-content"
            },
            {
              "include": "#not-impl-directive-content"
            },
            {
              "include": "#meta-directive-content"
            },
            {
              "include": "#custom-x-directive-content"
            },
            {
              "include": "#preamble-directive-content"
            },
            {
              "include": "#image-directive-content"
            },
            {
              "include": "#metadata-directive-content"
            },
            {
              "include": "#directive-content"
            }
          ]
        },
        "5": {
          "name": "punctuation.definition.directive.end.chordpro"
        }
      }
    },
    "directive-values": {
      "name": "meta.structure.directive.values.chordpro",
      "patterns": [
        {
          "include": "#key-value-pair"
        },
        {
          "name": "meta.structure.meta-replacmenent.chordpro",
          "match": "\\b(%{)(\\w[\\w\\d_\\.\\-]*)(})\\b",
          "captures": {
            "1": {
              "name": "punctuation.separator.meta-replacement.begin.chordpro"
            },
            "2": {
              "name": "entity.name.tag.meta-replacement.chordpro"
            },
            "3": {
              "name": "punctuation.separator.meta-replacement.end.chordpro"
            }
          }
        },
        {
          "name": "string.unquoted.chordpro",
          "match": "[^=]"
        }
      ]
    },
    "key-value-pair": {
      "name": "meta.key-value.chordpro",
      "match": "(\\w[\\w\\d_\\.\\-]*)\\s*(\\=)\\s*(\\\"([^\\\"]*)\\\"|([^\\\"]+))",
      "captures": {
        "1": {
          "name": "variable.parameter.attribute.chordpro"
        },
        "4": {
          "name": "string.quoted.attribute.value.chordpro"
        },
        "5": {
          "name": "string.unquoted.attribute.value.chordpro"
        }
      }
    },
    "comment-directive-content": {
      "name": "meta.structure.directive.comment.chordpro",
      "match": "((c|comment|ci|comment_italic|cb|comment_box|highlight)(\\-[a-z_\\d\\.]+)?)\\b((:?)\\s*([^\\}]*))?",
      "captures": {
        "1": {
          "name": "support.function.comment.chordpro"
        },
        "5": {
          "name": "punctuation.separator.directive.chordpro"
        },
        "6": {
          "name": "comment.value.chordpro"
        }
      }
    },
    "preamble-directive-content": {
      "name": "meta.structure.directive.preamble.chordpro",
      "match": "(new_song|ns)((:?)\\s*(toc)=\\s*([a-z\\d\\\"]+))?",
      "captures": {
        "1": {
          "name": "entity.name.tag.directive.preamble.chordpro"
        },
        "3": {
          "name": "punctuation.separator.directive.chordpro"
        },
        "4": {
          "name": "variable.parameter.attribute.chordpro"
        },
        "5": {
          "name": "meta.structure.directive.value.chordpro",
          "patterns": [
            {
              "include": "#string-quoted"
            },
            {
              "name": "string.unquoted.chordpro",
              "match": "[^\\\"]+"
            }
          ]
        }
      }
    },
    "metadata-directive-content": {
      "name": "meta.structure.directive.metadata.chordpro",
      "match": "((t|title|st|subtitle|artist|composer|lyricist|copyright|album|year|key|time|tempo|duration|capo)(\\-[a-z_\\d\\.]+)?)\\b((:?)\\s*([^\\}]+))?",
      "captures": {
        "1": {
          "name": "entity.name.tag.directive.metadata.chordpro"
        },
        "5": {
          "name": "punctuation.separator.directive.chordpro"
        },
        "6": {
          "name": "meta.structure.directive.value.metadata.chordpro",
          "patterns": [
            {
              "name": "string.unquoted.chordpro",
              "match": "[^\\}]+"
            }
          ]
        }
      }
    },
    "custom-x-directive-content": {
      "name": "meta.structure.directive.custom.chordpro",
      "match": "(x_[a-z_\\d\\.]+(\\-[a-z_\\d\\.]+)?)((:?)\\s*((%{[\\w_\\-\\.\\d]+}|.*)+)?)",
      "captures": {
        "1": {
          "name": "entity.name.tag.directive.custom.chordpro"
        },
        "4": {
          "name": "punctuation.separator.directive.custom.chordpro"
        },
        "5": {
          "name": "meta.structure.directive.value.custom.chordpro",
          "patterns": [
            {
              "include": "#directive-values"
            }
          ]
        }
      }
    },
    "image-directive-content": {
      "name": "meta.structure.directive.image.chordpro",
      "match": "(image(\\-[\\w\\d_\\.]+)?)((:?)\\s*((%{\\w[\\w\\d_\\-\\.]*}|.*)+)?)",
      "captures": {
        "1": {
          "name": "entity.name.tag.directive.image.chordpro"
        },
        "4": {
          "name": "punctuation.separator.directive.chordpro"
        },
        "5": {
          "name": "meta.structure.directive.value.image.chordpro",
          "patterns": [
            {
              "include": "#directive-values"
            }
          ]
        }
      }
    },
    "meta-directive-content": {
      "name": "meta.structure.directive.meta.chordpro",
      "match": "\\b(meta)(:?)\\s*(\\w[\\w\\d_\\-\\.]*)\\s+((%{\\w[\\w\\d_\\-\\.]*}|.*)+)",
      "captures": {
        "1": {
          "name": "entity.name.tag.directive.meta.chordpro"
        },
        "2": {
          "name": "punctuation.separator.directive.chordpro"
        },
        "3": {
          "name": "entity.name.tag.directive.chordpro"
        },
        "4": {
          "name": "meta.structure.directive.value.meta.chordpro",
          "patterns": [
            {
              "include": "#directive-values"
            }
          ]
        }
      }
    },
    "legacy-directive-content": {
      "name": "meta.structure.directive.legacy.chordpro",
      "match": "\\b(g|grid|ng|no_grid|titles|col|columns|diagrams|new_physical_page|npp)\\b((:?)\\s*([^\\}]+))?",
      "captures": {
        "1": {
          "name": "invalid.deprecated.tag.legacy.chordpro"
        },
        "3": {
          "name": "punctuation.separator.directive.chordpro"
        },
        "4": {
          "name": "meta.structure.directive.value.legacy.chordpro",
          "patterns": [
            {
              "name": "string.unquoted.chordpro",
              "match": ".+"
            }
          ]
        }
      }
    },
    "not-impl-directive-content": {
      "name": "meta.structure.directive.not-implemented.chordpro",
      "match": "\\b(pagetype)((:?)\\s*([^\\}]+))?",
      "captures": {
        "1": {
          "name": "invalid.tag.not-implemented.chordpro"
        },
        "3": {
          "name": "punctuation.separator.directive.chordpro"
        },
        "4": {
          "name": "meta.structure.directive.value.chordpro",
          "patterns": [
            {
              "name": "string.unquoted.chordpro",
              "match": ".+"
            }
          ]
        }
      }
    },
    "directive-content": {
      "name": "meta.structure.directive.chordpro",
      "match": "\\b([a-z_\\d\\.]+(\\-[a-z_\\d\\.]+)?)((:?)\\s*([^\\}]+))?",
      "captures": {
        "1": {
          "name": "entity.name.tag.directive.chordpro"
        },
        "4": {
          "name": "punctuation.separator.directive.chordpro"
        },
        "5": {
          "name": "meta.structure.directive.value.chordpro",
          "patterns": [
            {
              "include": "#directive-values"
            }
          ]
        }
      }
    },
    "pango-markup": {
      "contentName": "markup.pango",
      "begin": "<([a-z]+)(\\s*([^>]+))?>",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.begin.pango"
        },
        "3": {
          "patterns": [
            {
              "include": "#pango-key-value-pair"
            }
          ]
        }
      },
      "end": "</(\\1)>",
      "endCaptures": {
        "1": {
          "name": "entity.name.type.end.pango"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "pango-key-value-pair": {
      "name": "meta.key-value.pango.chordpro",
      "match": "([a-z\\-]+)\\s*(\\=)\\s*(\\\"([\\w\\s\\d\\.\\-_/:]+)\\\"|([\\w\\s\\d\\.\\-_/:]+))\\s*",
      "captures": {
        "1": {
          "name": "support.language.other.attribute.chordpro"
        },
        "4": {
          "name": "string.quoted.attribute.value.chordpro"
        },
        "5": {
          "name": "string.unquoted.attribute.value.chordpro"
        }
      }
    },
    "abc-parameter1": {
      "name": "meta.structure.definition.parameter.abc",
      "match": "^([BCDFGHIKLMmNOPQRrSsTUVWwXZ]:)\\s*(.+)",
      "captures": {
        "1": {
          "name": "variable.parameter.abc"
        },
        "2": {
          "patterns": [
            {
              "include": "#abc-parameter-values"
            }
          ]
        }
      }
    },
    "abc-parameter": {
      "name": "meta.structure.definition.parameter.abc",
      "match": "^(%%)([a-z]+)\\s*(.+)",
      "captures": {
        "1": {
          "name": "punctuation.delimiter.abc"
        },
        "2": {
          "name": "variable.parameter.abc"
        },
        "3": {
          "patterns": [
            {
              "include": "#abc-parameter-values"
            }
          ]
        }
      }
    },
    "abc-parameter-values": {
      "name": "meta.structure.parameter.values.abc",
      "patterns": [
        {
          "name": "meta.structure.meta-replacmenent.chordpro",
          "match": "(%{)([a-z_\\d\\.\\-]+)(})",
          "captures": {
            "1": {
              "name": "punctuation.separator.meta-replacement.begin.chordpro"
            },
            "2": {
              "name": "entity.name.tag.meta-replacement.chordpro"
            },
            "3": {
              "name": "punctuation.separator.meta-replacement.end.chordpro"
            }
          }
        },
        {
          "name": "string.unquoted.chordpro",
          "match": ".*"
        }
      ]
    },
    "string-quoted": {
      "name": "string.quoted.double.chordpro",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.untitled",
          "match": "\\."
        }
      ]
    }
  },
  "scopeName": "text.chordpro"
}